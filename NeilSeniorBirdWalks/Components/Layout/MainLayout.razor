@using Microsoft.AspNetCore.Server.HttpSys
@using Microsoft.CodeAnalysis.CSharp.Syntax
@using MudBlazor.Utilities
@inherits LayoutComponentBase

<MudThemeProvider  @bind-IsDarkMode="_useDarkMode" Theme="NeilSeniorTheme" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
	<MudAppBar  >
		<MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Tertiary" Edge="Edge.Start" OnClick="DrawerToggle" />
		<MudSpacer />
		<MudImage Src="/Images/Logo.svg"  Alt="Neil Senior Logo" Fluid="true" />
		<MudSpacer />
		<MudIconButton Icon="@(_useDarkMode ? Icons.Material.Filled.Brightness7 : Icons.Material.Filled.Brightness4)" Color="Color.Tertiary" Edge="Edge.End" OnClick="ToggleDarkMode" />
	</MudAppBar>
	<MudDrawer @bind-Open="_drawerOpen">
		<MyNavMenu/>
	</MudDrawer>
	<MudMainContent>
		@Body
	</MudMainContent>
	<MudThemeManagerButton OnClick="@((e) => OpenThemeManager(true))" />
	<MudThemeManager Open="_themeManagerOpen" OpenChanged="OpenThemeManager" Theme="_themeManager" ThemeChanged="UpdateTheme" />
</MudLayout>

@code {

	// Drawer
	private bool _drawerOpen = true;

	private void DrawerToggle()
	{
		_drawerOpen = !_drawerOpen;
	}

	// Dark Mode
	private bool _useDarkMode = false;

	private void ToggleDarkMode()
	{
		_useDarkMode = !_useDarkMode;
	}

	//Theme
	MudTheme NeilSeniorTheme = new MudTheme()
	{
		PaletteLight = new PaletteLight()
		{
				AppbarBackground = new MudColor("#424242ff"),
			Primary = new MudColor("#003D59"),
			Secondary = new MudColor("#013243"),
			Tertiary = new MudColor("#FFFFFF")
				
		},
		PaletteDark = new PaletteDark()
		{
				AppbarBackground = new MudColor("#424242ff"),
			Primary = new MudColor("#1DACD6"),
			Secondary = new MudColor("#48D1CC"),
		}, LayoutProperties = new LayoutProperties()
		{
			AppbarHeight = "80px"
		}


	};

	//Theme Manager
	private ThemeManagerTheme _themeManager = new ThemeManagerTheme();
	public bool _themeManagerOpen = false;

	void OpenThemeManager(bool value)
	{
		_themeManagerOpen = value;
	}

	void UpdateTheme(ThemeManagerTheme value)
	{
		_themeManager = value;
		StateHasChanged();
	}

	protected override void OnInitialized()
	{
		StateHasChanged();
	}

	

	

	
}