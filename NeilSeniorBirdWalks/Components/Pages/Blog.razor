@page "/blog/{slug}"
@using NeilSeniorBirdWalks.Models
@using NeilSeniorBirdWalks.Services
@inject BlogService BlogService
@inject NavigationManager NavigationManager

<MudContainer MaxWidth="MaxWidth.Large" Class="mt-4">
    @if (blogPost == null)
    {
        <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
    }
    else
    {
        <MudBreadcrumbs Items="_breadcrumbs"></MudBreadcrumbs>

        <div class="mt-6 mb-8">
            <MudText Typo="Typo.h2" Class="mb-4">@blogPost.Title</MudText>
            <MudText Typo="Typo.body2" Color="Color.Secondary">
                Posted on @blogPost.CreatedDate.ToString("MMMM d, yyyy")
            </MudText>
        </div>

        @if (!string.IsNullOrEmpty(blogPost.FeaturedImageUrl))
        {
            <MudImage Src="@blogPost.FeaturedImageUrl" Alt="@blogPost.Title"
                      Class="rounded-lg mb-8 width-100" Width="100" ObjectFit="ObjectFit.Cover" />
        }

        <MudGrid>
            <MudItem xs="12" md="6">
                <MudPaper Elevation="0" Class="mb-4 px-2">
                    <MudText Typo="Typo.body1">@blogPost.FirstParagraph</MudText>
                </MudPaper>
            </MudItem>
            <MudItem xs="12" md="6">
                @if (!string.IsNullOrEmpty(blogPost.FirstImageUrl))
                {
                    <MudImage Src="@blogPost.FirstImageUrl" Alt="First image"
                              Class="rounded-lg" Elevation="2"
                              ObjectFit="ObjectFit.Cover" Width="100" Height="300" />
                }
            </MudItem>
        </MudGrid>

        <MudDivider Class="my-6" />

        <!-- Second paragraph with image on left -->
        @if (!string.IsNullOrEmpty(blogPost.SecondParagraph))
        {
            <MudGrid>
                <MudItem xs="12" md="6" Order="2" OrderMd="1">
                    @if (!string.IsNullOrEmpty(blogPost.SecondImageUrl))
                    {
                        <MudImage Src="@blogPost.SecondImageUrl" Alt="Second image"
                                  Class="rounded-lg" Elevation="2"
                                  ObjectFit="ObjectFit.Cover" Width="100" Height="300" />
                    }
                </MudItem>
                <MudItem xs="12" md="6" Order="1" OrderMd="2">
                    <MudPaper Elevation="0" Class="mb-4 px-2">
                        <MudText Typo="Typo.body1">@blogPost.SecondParagraph</MudText>
                    </MudPaper>
                </MudItem>
            </MudGrid>

            <MudDivider Class="my-6" />
        }

        <!-- Third paragraph with image on right -->
        @if (!string.IsNullOrEmpty(blogPost.ThirdParagraph))
        {
            <MudGrid>
                <MudItem xs="12" md="6">
                    <MudPaper Elevation="0" Class="mb-4 px-2">
                        <MudText Typo="Typo.body1">@blogPost.ThirdParagraph</MudText>
                    </MudPaper>
                </MudItem>
                <MudItem xs="12" md="6">
                    @if (!string.IsNullOrEmpty(blogPost.ThirdImageUrl))
                    {
                        <MudImage Src="@blogPost.ThirdImageUrl" Alt="Third image"
                                  Class="rounded-lg" Elevation="2"
                                  ObjectFit="ObjectFit.Cover" Width="100" Height="300" />
                    }
                </MudItem>
            </MudGrid>
        }

        @if (blogPost.AdditionalImageUrls != null && blogPost.AdditionalImageUrls.Any())
        {
            <MudText Typo="Typo.h4" Class="mt-10 mb-4">Additional Images</MudText>
            <MudGrid>
                @foreach (var imageUrl in blogPost.AdditionalImageUrls)
                {
                    <MudItem xs="12" md="6" lg="4">
                        <MudImage Src="@imageUrl" Alt="Additional image"
                                  Class="rounded-lg width-100" Width="100" Height="250" ObjectFit="ObjectFit.Cover" />
                    </MudItem>
                }
            </MudGrid>
        }

        <MudDivider Class="my-8" />

        <MudButton Variant="Variant.Filled"
                   Color="Color.Primary"
                   OnClick="@(() => NavigationManager.NavigateTo("/blogs"))"
                   StartIcon="@Icons.Material.Filled.ArrowBack">
            Back to All Posts
        </MudButton>
    }
    </MudContainer>

    @code {
    [Parameter]
    public string Slug { get; set; }

    private BlogPost blogPost;
    private List<BreadcrumbItem> _breadcrumbs = new List<BreadcrumbItem>();

    protected override async Task OnInitializedAsync()
    {
        _breadcrumbs = new List<BreadcrumbItem>
        {
            new BreadcrumbItem("Home", href: "/"),
            new BreadcrumbItem("Blogs", href: "/blogs"),
            new BreadcrumbItem("Blog Post", href: null, disabled: true)
        };
    }

    protected override async Task OnParametersSetAsync()
    {
        if (!string.IsNullOrEmpty(Slug))
        {
            blogPost = await BlogService.GetBlogPostBySlugAsync(Slug);

            if (blogPost != null)
            {
                // Update the breadcrumb with the actual title
                _breadcrumbs[2] = new BreadcrumbItem(blogPost.Title, href: null, disabled: true);
            }
            else
            {
                // Handle case where blog post isn't found
                NavigationManager.NavigateTo("/blogs");
            }
        }
    }
}