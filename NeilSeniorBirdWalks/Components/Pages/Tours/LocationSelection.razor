@page "/tours"
@page "/tours/location"
@using NeilSeniorBirdWalks.Models
@inject NeilSeniorBirdWalks.Services.TourService TourService

<PageTitle>Tour Locations</PageTitle>

<MudContainer MaxWidth="MaxWidth.Large" Class="mt-4">
	<MudText Typo="Typo.h3" Class="mb-4">Choose a Tour Location</MudText>
    
	@if (locations == null)
	{
		<MudProgressCircular Indeterminate="true" />
	}
	else
	{
		<MudGrid>
			@foreach (var location in locations)
			{
				<MudItem xs="12" sm="6">
					<MudCard Elevation="3" Class="mb-4">
						<MudCardMedia Image="@($"/images/tours/{location.LocationCode}.jpg")" Height="300" Class="card-image" Style="margin: 3% 3% 0 3%"  />
						<MudCardContent >
							<MudText Typo="Typo.h5">@location.LocationName</MudText>
							<MudText Typo="Typo.body2">@location.Description</MudText>
						</MudCardContent>
						<MudCardActions>
							<MudButton Variant="Variant.Filled" Color="Color.Primary" 
							           Href="@($"/tours/location/{location.LocationCode}")">View Tours</MudButton>
						</MudCardActions>
					</MudCard>
				</MudItem>
			}
		</MudGrid>
	}
</MudContainer>

@code {
	private List<Location> locations;

	protected override async Task OnInitializedAsync()
	{
		locations = await TourService.GetLocationsAsync();
	}
}