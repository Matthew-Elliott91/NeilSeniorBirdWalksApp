@using NeilSeniorBirdWalks.Services
@using NeilSeniorBirdWalks.Models
@inject TourService TourService

<MudPaper Class="pa-4 mb-4">
	@if (tour != null)
	{
		<MudText Typo="Typo.h5" Class="mb-2">@tour.Title</MudText>
		<MudText>@tour.Description</MudText>
		
		@if (tour.Price.HasValue)
		{
			<MudChip T="int" Color="Color.Primary" Class="mt-2">£@tour.Price.Value.ToString("0.00")</MudChip>
		}
		
		@if (tour.Duration.HasValue)
		{
			<MudChip T="decimal" Color="Color.Secondary" Class="mt-2">
				@(tour.Duration.Value / 60)h @(tour.Duration.Value % 60)m
			</MudChip>
		}
        
		<MudDivider Class="my-4" />
        
		@if (!string.IsNullOrEmpty(tour.InfoHeadline))
		{
			<MudCard Class="my-4">
				<MudCardHeader>
					<MudText Typo="Typo.h6">@tour.InfoHeadline</MudText>
				</MudCardHeader>
				<MudCardMedia Image="@tour.InfoImageUrl" Height="200" />
				<MudCardContent>
					<MudText>@tour.InfoText</MudText>
				</MudCardContent>
			</MudCard>
            
			<MudDivider Class="my-4" />
		}

		<MudText Typo="Typo.subtitle1">Birds You Might See:</MudText>
		<MudList T="string">
			@foreach (var tourBird in tour.TourBirds)
			{
				<MudListItem Icon="@Icons.Material.Filled.ChevronRight">
					<div class="d-flex align-center">
						<span>@tourBird.Bird.CommonName</span>
						<MudChip T="string" Size="Size.Small" Color="@GetLikelihoodColor(tourBird.Likelihood)" 
							   Class="ml-2">@tourBird.Likelihood</MudChip>
					</div>
				</MudListItem>
			}
		</MudList>
        
		<MudButton Class="mt-4" Variant="Variant.Filled" Color="Color.Primary">Book This Tour</MudButton>
	}
	else
	{
		<MudProgressCircular Indeterminate="true" />
	}
</MudPaper>

@code {
	[Parameter]
	public string Location { get; set; }
    
	[Parameter]
	public string Season { get; set; }
    
	private Tour tour;
    
	protected override async Task OnParametersSetAsync()
	{
		tour = await TourService.GetTourDetailsAsync(Location, Season);
	}
	
	private Color GetLikelihoodColor(string likelihood) => likelihood?.ToLower() switch
	{
		"common" => Color.Success,
		"likely" => Color.Info,
		"occasional" => Color.Warning,
		"rare" => Color.Error,
		_ => Color.Default
	};
}

