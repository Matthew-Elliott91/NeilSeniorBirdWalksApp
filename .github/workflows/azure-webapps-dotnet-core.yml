# Workflow for building and deploying a Blazor Server app to Azure Web App
name: Build and deploy Blazor Server app to Azure Web App

env:
  AZURE_WEBAPP_NAME: staging-neil-senior-bird-walks  # your Azure Web App name
  AZURE_WEBAPP_PACKAGE_PATH: './publish'    # path where the web app is published
  DOTNET_VERSION: '8.0.x'                   # .NET 8 for your project
  PROJECT_PATH: 'NeilSeniorBirdWalks'       # path to your project

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest   # Windows for SQL Server tooling support

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Set up dependency caching for faster builds
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Build with dotnet
        run: dotnet build "${{ env.PROJECT_PATH }}" --configuration Release

      - name: dotnet publish
        run: dotnet publish "${{ env.PROJECT_PATH }}" -c Release -o ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

      - name: Upload application artifact
        uses: actions/upload-artifact@v4
        with:
          name: blazor-app
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  deploy:
    permissions:
      contents: none
    runs-on: windows-latest
    needs: build
    environment:
      name: 'Staging'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download application artifact
        uses: actions/download-artifact@v4
        with:
          name: blazor-app
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
