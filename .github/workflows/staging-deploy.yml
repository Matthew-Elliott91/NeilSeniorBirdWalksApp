name: Deploy to Staging

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --configuration Release --no-restore
    
    - name: Install EF Core CLI
      run: dotnet tool install --global dotnet-ef
      
    - name: Add dotnet-ef to PATH
      run: echo "$env:USERPROFILE\.dotnet\tools" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      shell: pwsh
    
    - name: Generate SQL Migration Script
      run: |
        # Create directory for migrations
        mkdir -p sql
    
        # Create temporary appsettings file with connection string
        $tempSettings = @"
        {
          "ConnectionStrings": {
            "DefaultConnection": "${{ secrets.DATABASE_CONNECTION_STRING }}"
          }
        }
        "@
    
        # Write to temp file
        Set-Content -Path "temp-appsettings.json" -Value $tempSettings
    
        # Use the temp file for migrations
        dotnet ef migrations script --idempotent --output sql/migration-script.sql --project NeilSeniorBirdWalks --context ApplicationDbContext --verbose --no-build --configuration Release --project-dir ./NeilSeniorBirdWalks
      shell: pwsh
    
    - name: Publish
      run: dotnet publish NeilSeniorBirdWalks --configuration Release --no-build --output ./publish
    
    - name: Allow Azure Services in SQL Firewall
      uses: azure/CLI@v1
      with:
        inlineScript: |
          # Login to Azure
          az login --service-principal --username ${{ secrets.AZURE_CLIENT_ID }} --password ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
          
          # Extract server name without domain
          $serverName = "${{ secrets.SQL_SERVER_NAME }}" -replace "\.database\.windows\.net$", ""
          
          # Get resource group name
          $resourceGroup = az sql server list --query "[?name=='$serverName'].resourceGroup" -o tsv
          
          # Allow Azure services
          az sql server firewall-rule create --resource-group $resourceGroup --server $serverName --name "AllowAllAzureServices" --start-ip-address 0.0.0.0 --end-ip-address 0.0.0.0 --output none
          
          # Also add GitHub Actions IP address
          $clientIP = (Invoke-WebRequest -uri "https://api.ipify.org/").Content
          az sql server firewall-rule create --resource-group $resourceGroup --server $serverName --name "GitHubActions" --start-ip-address $clientIP --end-ip-address $clientIP --output none
    
    - name: Apply Database Migrations
      uses: azure/sql-action@v1
      with:
        server-name: ${{ secrets.SQL_SERVER_NAME }}
        connection-string: ${{ secrets.DATABASE_CONNECTION_STRING }}
        sql-file: './sql/migration-script.sql'
      
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'staging-neil-senior-bird-walks-hsfkbsb5d4hpgfe4'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ./publish

